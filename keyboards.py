from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from datetime import datetime, timedelta

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏–π –º–µ—Å—è—Ü–µ–≤
MONTHS = {
    'en': ['January', 'February', 'March', 'April', 'May', 'June',
           'July', 'August', 'September', 'October', 'November', 'December'],
    'ru': ['–Ø–Ω–≤–∞—Ä—å', '–§–µ–≤—Ä–∞–ª—å', '–ú–∞—Ä—Ç', '–ê–ø—Ä–µ–ª—å', '–ú–∞–π', '–ò—é–Ω—å',
           '–ò—é–ª—å', '–ê–≤–≥—É—Å—Ç', '–°–µ–Ω—Ç—è–±—Ä—å', '–û–∫—Ç—è–±—Ä—å', '–ù–æ—è–±—Ä—å', '–î–µ–∫–∞–±—Ä—å'],
    'es': ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio',
           'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],
    'fr': ['Janvier', 'F√©vrier', 'Mars', 'Avril', 'Mai', 'Juin',
           'Juillet', 'Ao√ªt', 'Septembre', 'Octobre', 'Novembre', 'D√©cembre'],
    'uk': ['–°—ñ—á–µ–Ω—å', '–õ—é—Ç–∏–π', '–ë–µ—Ä–µ–∑–µ–Ω—å', '–ö–≤—ñ—Ç–µ–Ω—å', '–¢—Ä–∞–≤–µ–Ω—å', '–ß–µ—Ä–≤–µ–Ω—å',
           '–õ–∏–ø–µ–Ω—å', '–°–µ—Ä–ø–µ–Ω—å', '–í–µ—Ä–µ—Å–µ–Ω—å', '–ñ–æ–≤—Ç–µ–Ω—å', '–õ–∏—Å—Ç–æ–ø–∞–¥', '–ì—Ä—É–¥–µ–Ω—å'],
    'pl': ['Stycze≈Ñ', 'Luty', 'Marzec', 'Kwiecie≈Ñ', 'Maj', 'Czerwiec',
           'Lipiec', 'Sierpie≈Ñ', 'Wrzesie≈Ñ', 'Pa≈∫dziernik', 'Listopad', 'Grudzie≈Ñ']
}

def language_selection_keyboard():
    keyboard = [
        [InlineKeyboardButton("üá¨üáß English", callback_data='lang_en'),
         InlineKeyboardButton("üá∑üá∫ –†—É—Å—Å–∫–∏–π", callback_data='lang_ru')],
        [InlineKeyboardButton("üá™üá∏ Espa√±ol", callback_data='lang_es'),
         InlineKeyboardButton("üá´üá∑ Fran√ßais", callback_data='lang_fr')],
        [InlineKeyboardButton("üá∫üá¶ –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞", callback_data='lang_uk'),
         InlineKeyboardButton("üáµüá± Polski", callback_data='lang_pl')]
    ]
    return InlineKeyboardMarkup(keyboard)

def yes_no_keyboard(language):
    texts = {
        'en': ('Yes', 'No'),
        'ru': ('–î–∞', '–ù–µ—Ç'),
        'es': ('S√≠', 'No'),
        'fr': ('Oui', 'Non'),
        'uk': ('–¢–∞–∫', '–ù—ñ'),
        'pl': ('Tak', 'Nie')
    }
    yes_text, no_text = texts.get(language, ('Yes', 'No'))
    keyboard = [
        [InlineKeyboardButton(yes_text, callback_data='yes'),
         InlineKeyboardButton(no_text, callback_data='no')]
    ]
    return InlineKeyboardMarkup(keyboard)

def generate_calendar_keyboard(month_offset=0, language='en'):
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∏ —Å–º–µ—â–∞–µ–º –µ–µ –Ω–∞ –º–µ—Å—è—Ü –≤–ø–µ—Ä–µ–¥ –∏–ª–∏ –Ω–∞–∑–∞–¥, –µ—Å–ª–∏ —ç—Ç–æ —É–∫–∞–∑–∞–Ω–æ
    today = datetime.now().date()
    first_day_of_month = today.replace(day=1) + timedelta(days=month_offset*30)

    # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–π –¥–µ–Ω—å —Å–ª–µ–¥—É—é—â–µ–≥–æ –º–µ—Å—è—Ü–∞
    next_month = first_day_of_month.replace(day=28) + timedelta(days=4)
    first_day_of_next_month = next_month - timedelta(days=next_month.day - 1)

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã
    start_date = today + timedelta(days=1)
    end_date = start_date + timedelta(days=61)  # –î–≤–∞ –º–µ—Å—è—Ü–∞ –æ—Ç –∑–∞–≤—Ç—Ä–∞—à–Ω–µ–≥–æ –¥–Ω—è

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü –∏ –≥–æ–¥
    current_month = first_day_of_month.month
    current_year = first_day_of_month.year

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –≤ —Ç–µ–∫—É—â–µ–º –º–µ—Å—è—Ü–µ
    next_month_first_day = first_day_of_month.replace(day=28) + timedelta(days=4)
    days_in_month = (next_month_first_day - timedelta(days=next_month_first_day.day)).day

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    keyboard = []

    # –ù–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—è—Ü–∞ –∏ –≥–æ–¥–∞
    month_year = f"{MONTHS[language][current_month - 1]} {current_year}"
    keyboard.append([InlineKeyboardButton(month_year, callback_data="ignore")])

    # –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏
    days_of_week = {
        'en': ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],
        'ru': ['–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±', '–í—Å'],
        'es': ['Lun', 'Mar', 'Mi√©', 'Jue', 'Vie', 'S√°b', 'Dom'],
        'fr': ['Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam', 'Dim'],
        'uk': ['–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±', '–ù–¥'],
        'pl': ['Pon', 'Wt', '≈ör', 'Czw', 'Pt', 'Sob', 'Niedz']
    }
    keyboard.append([InlineKeyboardButton(day, callback_data="ignore") for day in days_of_week[language]])

    # –ü–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ –º–µ—Å—è—Ü–∞
    first_day_weekday = first_day_of_month.weekday()

    # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—ã–µ –∫–Ω–æ–ø–∫–∏ –¥–æ –ø–µ—Ä–≤–æ–≥–æ –¥–Ω—è —Ç–µ–∫—É—â–µ–≥–æ –º–µ—Å—è—Ü–∞
    row = [InlineKeyboardButton(" ", callback_data="ignore") for _ in range(first_day_weekday)]
    for day in range(1, days_in_month + 1):
        current_date = first_day_of_month.replace(day=day)
        if start_date <= current_date <= end_date:
            row.append(InlineKeyboardButton(str(day), callback_data=f"date_{current_date}"))
        else:
            row.append(InlineKeyboardButton(" ", callback_data="ignore"))
        if len(row) == 7:
            keyboard.append(row)
            row = []

    if row:
        keyboard.append(row)

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    navigation_buttons = []
    if month_offset > 0:
        navigation_buttons.append(InlineKeyboardButton("<", callback_data=f"prev_{month_offset - 1}"))
    if end_date.month != current_month:
        navigation_buttons.append(InlineKeyboardButton(">", callback_data=f"next_{month_offset + 1}"))
    if navigation_buttons:
        keyboard.append(navigation_buttons)

    return InlineKeyboardMarkup(keyboard)